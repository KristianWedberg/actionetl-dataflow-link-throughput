<?xml version="1.0" encoding="utf-8" ?>

<!-- 
  The nlog attributes below control the NLog framework itself. Consider setting
  throwExceptions="false" in production. Consider setting internalLogLevel="Info" 
  or "Debug" if no log output appears at all.
  -->
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
          
    autoReload="false"
    throwExceptions="true"
    internalLogFile="nlog-internal.log"
    internalLogLevel="Warn"
    internalLogToConsole="true"
>

  <!-- 
  The below elements control the actionETL logging. See the documentation at
  https://docs.envobi.com/actionetl/articles/logging.html and 
  https://github.com/nlog/nlog/wiki/Configuration-file for information on 
  customizing logging rules and outputs.
  -->

  <extensions>
    <add assembly="actionETL" />
  </extensions>


  <variable name="header-layout"
    value="DateTime | Level | Locator | Category | Message"/>

  <variable name="file-body-layout-stacktrace"
    value="${longdate} | ${level:uppercase=true} | ${logger} | ${event-properties:item=Category} | ${message}${onexception:${literal:text= }EXCEPTION OCCURRED\: ${exception:format=tostring,data,method:maxInnerExceptionLevel=10:innerFormat=tostring,data,method:maxInnerExceptionLevel=10}}"/>

  <variable name="console-body-layout"
    value="${longdate} | ${level:uppercase=true} | ${logger} | ${event-properties:item=Category} | ${message}${onexception:${literal:text= }EXCEPTION OCCURRED\: ${exception:format=type,message,data,method:maxInnerExceptionLevel=10:innerFormat=shorttype,message,data,method:maxInnerExceptionLevel=10}}"/>


  <targets>
    <target name="ToFile" xsi:type="BufferingWrapper" bufferSize="100" flushTimeout="1000" slidingTimeout="false">
      <target xsi:type="File" fileName="${processname}.log" deleteOldFileOnStartup="true" header="${var:header-layout}" layout="${var:file-body-layout-stacktrace}"/>
    </target>

    <target name="ToConsole" xsi:type="ColoredConsole" header="${var:header-layout}" layout="${var:console-body-layout}"/>
  </targets>


  <rules>
    <logger name="*" minlevel="Warn" writeTo="ToFile" />

    <logger name="*" minlevel="Warn" writeTo="ToConsole">
      <filters>
        <!-- Filter out non-essential Info events to console -->
        <when condition="level == LogLevel.Info and not starts-with('${event-properties:item=Category}','System.') and not starts-with('${event-properties:item=Category}','Worker.Status.Running') and not starts-with('${event-properties:item=Category}','Worker.Status.Completed')" action="Ignore" />
      </filters>
    </logger>
  </rules>
</nlog>